#!/bin/sh
# postinst script for ledgersmb
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#  Set old_version variable for use later in the script.
old_version=$2

# Source debconf
if [ -f /usr/share/debconf/confmodule ]; then
    . /usr/share/debconf/confmodule
fi

case "$1" in
    configure)
        # Do Apache related processing if it is present.
        if [ -d "/etc/apache2" ]; then
            if [ -e /usr/share/apache2/apache2-maintscript-helper ] ; then
                [ -d /etc/apache2/sites-available/ ] && [ ! -e /etc/apache2/sites-available/ledgersmb-proxy.conf ] && ucf --debconf-ok /usr/share/ledgersmb/conf/apache-vhost.conf /etc/apache2/sites-available/ledgersmb-proxy.conf
                . /usr/share/apache2/apache2-maintscript-helper
                if ! a2query -qm proxy_http ; then
                    apache2_invoke enmod proxy_http || exit $?
                fi
                if ! a2query -qm rewrite ; then
                    apache2_invoke enmod rewrite || exit $?
                fi
                apache2_invoke enconf ledgersmb-proxy.conf
                [ ! -h /etc/ledgersmb/apache-proxy.conf ] && ln -s /etc/apache2/sites-available/ledgersmb-proxy.conf /etc/ledgersmb/apache-proxy.conf
            fi
        fi
        #
        # Do Nginx related processing if it is present.
        if [ -d "/etc/nginx" ]; then
            [ -d /etc/nginx/sites-available/ ] && [ ! -e /etc/nginx/sites-available/ledgersmb-proxy.conf ] && ucf /usr/share/ledgersmb/conf/nginx-vhost.conf /etc/nginx/sites-available/ledgersmb-proxy.conf
            # Enable nginx proxy configuration 
            if [ ! -h /etc/nginx/sites-enabled/ledgersmb-proxy.conf ] ; then
                ln -s /etc/nginx/sites-available/ledgersmb-proxy.conf /etc/nginx/sites-enabled/ledgersmb-proxy.conf
                if which nginx >/dev/null 2>&1; then
                    nginx -s reload
                fi
            fi
            [ ! -h /etc/ledgersmb/nginx-proxy.conf ] && ln -s /etc/nginx/sites-available/ledgersmb-proxy.conf /etc/ledgersmb/ngnix-proxy.conf
        fi
        #
        # If enabled, do the debconf supported configuration
        db_get ledgersmb/debconf_install
        if [ "$RET" = true ]; then 
            # Get user name.
            db_get ledgersmb/admin_login
            LSMBDBUSER=$RET
            # Get password
            db_get ledgersmb/admin_password
            LSMBDBPW=$RET
            # Select which, if any, Web Proxy is to be used.
            db_get ledgersmb/lsmb_proxy
            LSMBPROXY=$RET
            # Configure database administrative user
            /usr/share/ledgersmb/tools/config-lsmb-db-user.sh $LSMBDBUSER $LSMBDBPW
        fi
        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
